<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.greedy.byat.member.model.dao.MemberMapper">
 	
 	<resultMap id="memberResultMap" type="MemberDTO">
 		<id property="no" column="MEMBER_NO"/>
 		<result property="permitCode" column="PERMIT_CODE"/>
 		<result property="id" column="MEMBER_ID"/>
 		<result property="pwd" column="MEMBER_PWD"/>
 		<result property="name" column="MEMBER_NAME"/>
 		<result property="phone" column="MEMBER_PHONE"/>
 		<result property="email" column="MEMBER_EMAIL"/>
 		<result property="absenceYN" column="ABSENCE_YN"/>
 		<result property="initPwdYN" column="INIT_PWD_YN"/>
 	</resultMap>
 	
 	<resultMap id="attachmentResultMap" type="AttachmentDTO">
 		<id property="code" column="ATTACHMENT_CODE"/>
 		<result property="orgName" column="ATTACHMENT_ORG_NAME"/>
 		<result property="savedName" column="ATTACHMENT_SAVED_NAME"/>
 		<result property="path" column="ATTACHMENT_PATH"/>
 		<result property="thumbnailPath" column="ATTACHMENT_THUMBNAIL_PATH"/>
 		<result property="status" column="ATTACHMENT_STATUS"/>
 		<result property="memberNo" column="MEMBER_NO"/>
 	</resultMap>
 	
 	<select id="selectEncryptedPwd" resultType="java.lang.String">
 		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#selectEncryptedPwd() */
 		       A.MEMBER_PWD
 		  FROM TBL_MEMBER A
 		 WHERE A.ABSENCE_YN = 'N'
 		   AND A.MEMBER_ID = #{ id }
 	
 	</select>
 
 	<select id="login" resultMap="memberResultMap">
 		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#login() */
 		       A.MEMBER_NO
 		     , A.PERMIT_CODE
 		     , A.MEMBER_ID
 		     , A.MEMBER_PWD
 		     , A.MEMBER_NAME
 		     , A.MEMBER_PHONE
 		     , A.MEMBER_EMAIL
 		     , A.ABSENCE_YN
 		     , A.INIT_PWD_YN
 		  FROM TBL_MEMBER A
 		  JOIN TBL_PERMIT B ON (A.PERMIT_CODE = B.PERMIT_CODE)
 		 WHERE A.ABSENCE_YN = 'N'
 		   AND A.INIT_PWD_YN = 'N'
 		   AND A.MEMBER_ID = #{ id }
 	
 	</select>
 
 	<select id="initLogin" resultMap="memberResultMap">
 		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#initLogin() */
 		       A.MEMBER_NO
 		     , A.PERMIT_CODE
 		     , A.MEMBER_ID
 		     , A.MEMBER_PWD
 		     , A.MEMBER_NAME
 		     , A.MEMBER_PHONE
 		     , A.MEMBER_EMAIL
	      	 , A.ABSENCE_YN
 		     , A.INIT_PWD_YN
 		  FROM TBL_MEMBER A
 		  JOIN TBL_PERMIT B ON (A.PERMIT_CODE = B.PERMIT_CODE)
 		 WHERE A.ABSENCE_YN = 'N'
 		   AND A.INIT_PWD_YN = 'Y'
 		   AND A.MEMBER_ID = #{ id }
 	</select>
 	
	<select id="selectInitPasswordYN" resultType="java.lang.String">
		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#selectInitPasswordYN() */
		       A.INIT_PWD_YN
		  FROM TBL_MEMBER A
		 WHERE A.MEMBER_ID = #{ id }
	</select> 
		
	<select id="selectEmailById" resultType="java.lang.String">
		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#selectEmailById() */
		       A.MEMBER_EMAIL
		  FROM TBL_MEMBER A
		 WHERE A.ABSENCE_YN = 'N'
		   AND A.MEMBER_ID = #{ id } 
	</select>
	
	<select id="selectMemberNo" resultType="_int">
		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#selectMemberNo() */
		       A.MEMBER_NO
		  FROM TBL_MEMBER A
		 WHERE A.ABSENCE_YN = 'N'
		   AND A.MEMBER_ID = #{ id }
	</select>
	
	<insert id="insertverification" parameterType="hashmap">
		INSERT /* com.greedy.byat.member.model.dao.MemberMapper#insertverification() */
		  INTO TBL_VERIFICATION A 
		( 
		   A.VERIFICATION_NUM_CODE
		 , A.VERIFICATION_NUM_KEY
		 , A.VERIFICATION_NUM_TYPE
		 , A.VERIFICATION_NUM_CREATED_DATE
		 , A.VERIFICATION_NUM_USED_DATE
		 , A.VERIFICATION_NUM_DESTRUCTION_YN
		 , A.MEMBER_NO
		)
		VALUES
		(
		   SEQ_VERIFICATION_NUM_CODE.NEXTVAL
		 , #{ verification }
		 , '멤버비밀번호찾기'
		 , SYSDATE
		 , NULL
		 , 'N'
		 , #{ no }
		)
	</insert>
	
	<insert id="insertverificationforInit" parameterType="hashmap">
		INSERT /* com.greedy.byat.member.model.dao.MemberMapper#insertverificationforInit() */ 
		  INTO TBL_VERIFICATION A 
		( 
		   A.VERIFICATION_NUM_CODE
		 , A.VERIFICATION_NUM_KEY
		 , A.VERIFICATION_NUM_TYPE
		 , A.VERIFICATION_NUM_CREATED_DATE
		 , A.VERIFICATION_NUM_USED_DATE
		 , A.VERIFICATION_NUM_DESTRUCTION_YN
		 , A.MEMBER_NO
		)
		VALUES
		(
		   SEQ_VERIFICATION_NUM_CODE.NEXTVAL
		 , #{ verification }
		 , '초기계정정보설정'
		 , SYSDATE
		 , NULL
		 , 'N'
		 , #{ no }
		)
	</insert>
	
	
	<select id="mathchVerificationNumber" resultType="java.lang.String">
		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#mathchVerificationNumber() */ 
			   A.VERIFICATION_NUM_KEY
	      FROM TBL_VERIFICATION A
	     WHERE A.VERIFICATION_NUM_DESTRUCTION_YN = 'N'
	       AND A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
	</select>
	
	<select id="mathchVerificationNumberForInit" resultType="java.lang.String">
		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#mathchVerificationNumberForInit() */
			   A.VERIFICATION_NUM_KEY
	      FROM TBL_VERIFICATION A
	     WHERE A.VERIFICATION_NUM_DESTRUCTION_YN = 'N'
	       AND A.MEMBER_NO = #{ inputNo }
	       AND A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
	</select>
	
	
	<update id="updateVerficiation" parameterType="java.lang.String">
		UPDATE /* com.greedy.byat.member.model.dao.MemberMapper#updateVerficiation() */
		       TBL_VERIFICATION A
		   SET A.VERIFICATION_NUM_USED_DATE = (SELECT SYSDATE FROM DUAL)
		     , A.VERIFICATION_NUM_DESTRUCTION_YN = 'Y'
		 WHERE A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
		   AND A.VERIFICATION_NUM_TYPE = '멤버비밀번호찾기'   	
	</update>

	<update id="updateVerficiationForInit" parameterType="java.lang.String">
		UPDATE /* com.greedy.byat.member.model.dao.MemberMapper#updateVerficiationForInit() */
		       TBL_VERIFICATION A
		   SET A.VERIFICATION_NUM_USED_DATE = (SELECT SYSDATE FROM DUAL)
		     , A.VERIFICATION_NUM_DESTRUCTION_YN = 'Y'
		 WHERE A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
		   AND A.VERIFICATION_NUM_TYPE = '초기계정정보설정'   	 
	</update>

	<update id="initialInputInfo" parameterType="hashmap">
		UPDATE /* com.greedy.byat.member.model.dao.MemberMapper#initialInputInfo() */
		       TBL_MEMBER A 
		   SET A.MEMBER_EMAIL = #{ email }
		     , A.MEMBER_PHONE = #{ phone }
		     , A.MEMBER_PWD = #{ password }
		     , A.INIT_PWD_YN = 'N'
		 WHERE A.MEMBER_NO = #{ no }
		   AND A.ABSENCE_YN = 'N'
	</update>

	
	<update id="updateMemberPwd" parameterType="hashmap">
		UPDATE /* com.greedy.byat.member.model.dao.MemberMapper#updateMemberPwd() */
		       TBL_MEMBER A
		   SET A.MEMBER_PWD = #{ encodedFirstPwd }
		 WHERE A.ABSENCE_YN = 'N'
		   AND A.MEMBER_ID = #{ id } 
	</update>
	
	<select id="emailDuplicationCheck" resultType="java.lang.String">
		SELECT /* com.greedy.byat.member.model.dao.MemberMapper#emailDuplicationCheck() */
		       A.MEMBER_EMAIL
		  FROM TBL_MEMBER A
		 WHERE A.MEMBER_EMAIL = #{ emailAddress	}
		   AND A.ABSENCE_YN = 'N'
	</select>
	
	<update id="updateMemberProfile">
        UPDATE /* com.greedy.byat.member.model.dao.MemberMapper#updateMemberProfile() */
               TBL_MEMBER A
           SET A.MEMBER_NAME = #{ name }
             , A.MEMBER_EMAIL = #{ email }
             , A.MEMBER_PHONE = #{ phone }
         WHERE A.ABSENCE_YN = 'N'
           AND A.MEMBER_ID = #{ id }
	</update>
	
	<select id="selectAttachment" resultMap="attachmentResultMap">
        SELECT /* com.greedy.byat.member.model.dao.MemberMapper#selectAttachment() */
               A.ATTACHMENT_CODE
             , A.ATTACHMENT_ORG_NAME
             , A.ATTACHMENT_SAVED_NAME
             , A.ATTACHMENT_PATH
             , A.ATTACHMENT_THUMBNAIL_PATH
             , A.ATTACHMENT_STATUS
             , A.MEMBER_NO
          FROM TBL_ATTACHMENT A
         WHERE A.MEMBER_NO = #{ no }
           AND A.ATTACHMENT_STATUS = 'Y'
	</select>
	
	<update id="updateAttachmentStatus">
        UPDATE /* com.greedy.byat.member.model.dao.MemberMapper#updateAttachmentStatus() */
               TBL_ATTACHMENT A
           SET A.ATTACHMENT_STATUS = 'N'
         WHERE A.MEMBER_NO = #{ no }
	</update>
	
	<insert id="insertAttachment" parameterType="attachmentDTO">
        INSERT /* com.greedy.byat.member.model.dao.MemberMapper#insertAttachment() */
          INTO TBL_ATTACHMENT A
          (
            A.ATTACHMENT_CODE
          , A.ATTACHMENT_ORG_NAME
          , A.ATTACHMENT_SAVED_NAME
          , A.ATTACHMENT_PATH
          , A.ATTACHMENT_THUMBNAIL_PATH
          , A.MEMBER_NO
          )
          VALUES
          (
            SEQ_ATTACHMENT_CODE.NEXTVAL
          , #{ orgName }
          , #{ savedName }
          , #{ path }
          , #{ thumbnailPath }
          , #{ memberNo }
          )
	</insert>
 </mapper>